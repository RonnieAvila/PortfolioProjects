--CLEANING DATA IN SQL QUERIES

SELECT *
FROM Projects.dbo.NashvilleHousing
 --------------------------------------------------------------------------------------------------------------------------

--POPULATE PROPERTY ADDRESS DATA

SELECT *
FROM Projects.dbo.NashvilleHousing
--WHERE PropertyAddress is null
ORDER BY ParcelID

SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
FROM Projects.dbo.NashvilleHousing a
JOIN Projects.dbo.NashvilleHousing b
	ON a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
WHERE a.PropertyAddress is null

UPDATE a
SET PropertyAddress = ISNULL(a.PropertyAddress,b.PropertyAddress)
FROM Projects.dbo.NashvilleHousing a
JOIN Projects.dbo.NashvilleHousing b
	ON a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
WHERE a.PropertyAddress is null

--------------------------------------------------------------------------------------------------------------------------

-- BREAKING OUT ADDRESS INTO INDIVIDUAL COLUMNS (Address, City, State)


SELECT PropertyAddress
FROM Projects.dbo.NashvilleHousing
--WHERE PropertyAddress is null
--ORDER BY ParcelID

SELECT
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 ) as Address
, SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress)) as Address

FROM Projects.dbo.NashvilleHousing

ALTER TABLE Projects.dbo.NashvilleHousing
ADD PropertySplitAddress Nvarchar(255);

UPDATE Projects.dbo.NashvilleHousing
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 )

ALTER TABLE Projects.dbo.NashvilleHousing
ADD PropertySplitCity Nvarchar(255);

UPDATE Projects.dbo.NashvilleHousing
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress))

SELECT *
FROM Projects.dbo.NashvilleHousing

SELECT OwnerAddress
FROM Projects.dbo.NashvilleHousing

SELECT
PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)
FROM Projects.dbo.NashvilleHousing

ALTER TABLE Projects.dbo.NashvilleHousing
ADD OwnerSplitAddress Nvarchar(255);

UPDATE Projects.dbo.NashvilleHousing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)


ALTER TABLE Projects.dbo.NashvilleHousing
ADD OwnerSplitCity Nvarchar(255);

UPDATE Projects.dbo.NashvilleHousing
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)

ALTER TABLE Projects.dbo.NashvilleHousing
ADD OwnerSplitState Nvarchar(255);

UPDATE Projects.dbo.NashvilleHousing
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)

SELECT *
FROM Projects.dbo.NashvilleHousing

--------------------------------------------------------------------------------------------------------------------------


-- CHANGE Y AND N TO Yes and No IN "Sold as Vacant" FIELD

SELECT DISTINCT(SoldAsVacant), COUNT(SoldAsVacant)
FROM Projects.dbo.NashvilleHousing
GROUP BY SoldAsVacant
ORDER BY 2

ALTER TABLE Projects.dbo.NashvilleHousing
ALTER COLUMN SoldAsVacant varchar(3);

SELECT SoldAsVacant
, CAST(CASE WHEN SoldAsVacant = '1' THEN 'Yes'
	   WHEN SoldAsVacant = '0' THEN 'No'
	   ELSE SoldAsVacant
	   END as varchar(3)) 
FROM Projects.dbo.NashvilleHousing;

UPDATE Projects.dbo.NashvilleHousing
SET SoldAsVacant = CAST(CASE WHEN SoldAsVacant = '1' THEN 'Yes'
	   WHEN SoldAsVacant = '0' THEN 'No'
	   ELSE SoldAsVacant
	   END as varchar(3)) 

-----------------------------------------------------------------------------------------------------------------------------------------------------------

--REMOVE DUPLICATES

WITH RowNumCTE AS(
SELECT *,
	ROW_NUMBER() OVER (
	PARTITION BY ParcelID,
				 PropertySplitAddress,
				 PropertySplitCity,
				 SalePrice
				 LegalReference
				 ORDER BY
					UniqueID
					) row_num

FROM Projects.dbo.NashvilleHousing
-- ORDER BY ParcelID
)
SELECT *
FROM RowNumCTE
WHERE row_num > 1
ORDER BY PropertyAddress

SELECT *
FROM Projects.dbo.NashvilleHousing

---------------------------------------------------------------------------------------------------------

--DELETE UNUSED COLUMNS

SELECT *
FROM Projects.dbo.NashvilleHousing

ALTER TABLE Projects.dbo.NashvilleHousing
DROP COLUMN OwnerSplitAddress, PropertySplitAddress
